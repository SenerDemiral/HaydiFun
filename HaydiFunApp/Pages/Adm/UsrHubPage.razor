@page "/adm/usrhub"

@inject NavigationManager NavigationManager
@inject IPubs pubs
@inject UsrHub UsrHub
@implements IDisposable

<style>
    .ug {
        display: grid;
        grid-gap: 4px;
        grid-template-columns: 100px 50px 200px;
        background-color: burlywood;
        /*color: #444;*/
        justify-content: center;
        align-content: center;
        /*height: 100px;*/
        /*overflow: auto;*/
    }

    .tal {
        text-align: left;
    }

    .tac {
        text-align: center;
    }

    .tar {
        text-align: right;
    }

    table, th, td {
        border: 1px solid burlywood;
        border-collapse: collapse;
    }
</style>

@*<div class="ug">
    <div>Usr</div>
    <div>Cnt</div>
    <div>InsTS</div>
    @foreach (var kv in UsrHub.Usrs)
    {
        <div>@kv.Value.UsrNN</div>
        <div>@kv.Value.Cnt</div>
        <div>@kv.Value.EXD</div>
    }

</div>*@
@if (USP.UsrId != 0)
{
    <div style="margin:auto; width: fit-content;">
        <table>
            <caption style="background-color: burlywood;">Online Users</caption>
            <colgroup>
                <col>
                <col>
                <col>
                <col style="width:100px">
                <col>
                <col>
            </colgroup>
            <thead>
                <tr>
                    <th class="tal">Usr</th>
                    <th>Cnt</th>
                    <th>EXD</th>
                    <th>Avatar</th>
                    <th>Takipcim</th>
                    <th>İzliyorum</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int NOU = 0;
                    int NOC = 0;
                }
                @foreach (var kv in UsrHub.UsrD)
                {
                    char Takipcim = ' ';
                    char Izliyorum = ' ';
                    if (kv.Key == USP.UsrId)
                    {
                        Takipcim = '★';
                        Izliyorum = '★';
                    }
                    if (kv.Value.FanD.TryGetValue(USP.UsrId, out char tv))
                    {
                        Takipcim = tv switch
                        {
                            'T' => '✓',
                            'E' => '⛔', //(char)0x26D4, //'✘', //(char)0x2718,
                        };
                    }
                    if (UsrHub.UsrD[USP.UsrId].FanD.TryGetValue(kv.Key, out char fv))
                    {
                        Izliyorum = fv switch
                        {
                            'T' => '✓',
                            'E' => (char)0x26D4, //'✘', //(char)0x2718,
                        };
                    }

                    @*if (kv.Value.FanD.ContainsKey(USP.UsrId))
            {
            //ToTkpStu = kv.Value.FanD[USP.UsrId];
            ToTkpStu = kv.Value.FanD[USP.UsrId] switch
            {
            'T' => '✓',
            'E' => (char)0x26D4, //'✘', //(char)0x2718,
            };
            }*@
                    @*if (UsrHub.UsrD[USP.UsrId].FanD.ContainsKey(kv.Key))
            {
            //FrTkpStu = UsrHub.UsrD[USP.UsrId].FanD[kv.Key];
            FrTkpStu = UsrHub.UsrD[USP.UsrId].FanD[kv.Key] switch
            {
            'T' => '✓',
            'E' => (char)0x26D4,
            };
            }*@
                    <tr @key="kv.Key">
                        <td>@kv.Value.Usr</td>
                        <td class="tac">@kv.Value.Cnt</td>
                        <td>@kv.Value.EXD</td>
                        <td><img src="@kv.Value.ImgUrl" style="display:block" /></td>
                        <td class="tac" style="font-size:x-large">@Takipcim</td>
                        <td class="tac" style="font-size:x-large">@Izliyorum</td>
                    </tr>
                    <tr>
                        <td colspan="9">@kv.Value.LblAds</td>
                    </tr>
                    NOU++;
                    NOC += kv.Value.Cnt;
                }
            </tbody>
            <tfoot>
                <tr>
                    <td class="tac">@NOU</td>
                    <td class="tac">@NOC</td>
                </tr>
            </tfoot>
        </table>
    </div>
}
@code {
    [CascadingParameter] private UserStateProvider? USP { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        //if (parameters.TryGetValue<UserStateProvider>(nameof(USP), out var value))
        //{
        //  if (value is null || value.UsrTyp != "A")
        //    NavigationManager.NavigateTo("");
        //  else
        //    await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
        //}
        await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
    }

    protected override void OnInitialized()
    {
        //pubs.UsrChanged += OnUsrChanged;

        pubs.AddDynEvent(Constants.UsrCntChange, UsrCntChange);

    }

    public void UsrCntChange(dynamic d)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        //pubs.UsrChanged -= UsrCntChange;
        pubs.RemoveDynEvent(Constants.UsrCntChange, UsrCntChange);

    }

}
