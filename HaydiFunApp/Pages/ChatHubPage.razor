@page "/chathub/{etId:int}"

@inject NavigationManager NavigationManager
@inject IPubs pubs
@inject UsrHub UsrHub
@inject LblHub LblHub
@inject ChatHub ChatHub
@inject EtkHub EtkHub
@inject IDialogService DialogService

@implements IDisposable


@if (USP.UsrId != 0)
{
    <div style=" display: grid; grid-template-columns:minmax(min-content,1fr); justify-content: center;">

        @*<div style="margin:auto; width:fit-content; ">*@
        <div style="position:relative" >
            <textarea rows="@tar"  style="width:100%;font-weight:bold;resize: vertical;" placeholder="Mesaj..."
            @bind="ChatText"
            @onkeypress="@KeyHandler"
            @bind:event="oninput" />
            <div class="txtBaslik">Etkinlik #@ETid</div>
        </div>
        <div style="max-height:78vh; overflow:auto; display:grid" >
            <table id="star_wars">
            @*<caption style="background-color: burlywood;">Chat Grup #@ETid</caption>*@
            <colgroup>
                <col>
            </colgroup>
            <tbody>
                @{
                    DateTime p = new(1, 1, 1);
                }
                @foreach (var e in ChatL)
                {
                    if (p != e.EXD.Date)
                    {
                        p = e.EXD.Date;
                        <tr>
                            <td colspan="9" class="tac">
                                <span class="tarih">@e.EXD.Date.ToString("dd.MMM.yy")</span>
                            </td>
                        </tr>
                    }

                    bool isOwn = USP.UsrId == e.UTid ? true : false;
                    string kim = isOwn ? "Ben" : UsrHub.UsrD[e.UTid].Usr;
                    <tr @key="e.ECid">
                        @if (isOwn)
                        {
                            <td class="info ml-4" data-kim="@kim">
                                <textarea rows="@e.InfoNOL" disabled class="txta">@e.Info</textarea>
                                <div class="saat">@e.EXD.ToString("HH:mm")</div>
                            </td>

                        }
                        else
                        {
                            <td class="info" data-kim="@kim">
                                <div class="usr" @onclick="(()=> UsrInfo(e.UTid))">@kim</div>
                                <textarea rows="@e.InfoNOL" disabled class="txta">@e.Info</textarea>
                                <div class="saat">@e.EXD.ToString("HH:mm")</div>

                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
            <button class="btn btn-link" onclick="document.getElementById('star_wars').scrollIntoView()">Başa dön</button>
        </div>

    </div>
}

<MudPopover Open="@_isOpen" Fixed="true">
    <div class="d-flex flex-column" style="max-width:360px">
        <img src="@UsrImgUrl" style="display:block;" />
        <MudChip Label="true" Color="Color.Error">@Usr</MudChip>
        <div class="px-0">
            @foreach (var lbl in UsrLblL)
            {
                <MudChip Label="true" Color="Color.Info" Size="Size.Small">@lbl</MudChip>
            }
        </div>
        <MudButton OnClick="@ToggleOpen" Class="mb-1" Color="Color.Error">Kapat</MudButton>
    </div>
</MudPopover>

@code {
    [CascadingParameter] private UserStateProvider USP { get; set; }
    [Parameter] public int ETid { get; set; } = 12;
    List<ChatHub.ChatMdl> ChatL = new();
    private string ChatText { get; set; }

    private string Usr;
    private string UsrImgUrl;
    private List<string> UsrLblL;

    public bool _isOpen;

    public int _tar;
    public int tar
    {
        get => _tar < 2 ? 2 : _tar;
        set
        {
            _tar = value > 4 ? 5 : value;
        }
    }
    public void ToggleOpen()
    {
        _isOpen = !_isOpen;
    }

    private void KeyHandler(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            if (args.CtrlKey)
            {
                ChatText += Environment.NewLine;

                tar = ChatText.Count(x => x == '\n') + 1;
                return;
            }

            if (!string.IsNullOrWhiteSpace(ChatText))
                ChatHub.AddChat(ETid, USP.UsrId, ChatText);

            ChatText = "";
            tar = 2;
            return;
        }
    }

    private void UsrInfo(int utId)
    {
        Usr = UsrHub.UsrD[utId].Usr;
        UsrImgUrl = UsrHub.UsrD[utId].ImgUrlBig;
        UsrLblL = LblHub.Lbls2List(UsrHub.UsrD[utId].Lbls);
        _isOpen = true;
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        //if (parameters.TryGetValue<UserStateProvider>(nameof(USP), out var value))
        //{
        //  if (value is null || value.UsrTyp != "A")
        //    NavigationManager.NavigateTo("");
        //  else
        //    await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
        //}

        //   char usrEtkStu = EtkHub.EtkD[ETid].MbrD[USP.UsrId];
        //   if (usrEtkStu == 'K' || usrEtkStu == 'k')
        //       await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
        //   else
        //       NavigationManager.NavigateTo("/etkhub");
        //
        await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
    }

    private void deneme()
    {
        if (!string.IsNullOrWhiteSpace(ChatText))
            ChatHub.AddChat(ETid, USP.UsrId, ChatText);
    }
    protected override void OnParametersSet()
    {
    }

    protected override void OnInitialized()
    {
        // Subscribe olmaya gerek yok.
        // UsrHub.UsrD degistiginde USP(parent) degistigi icin burayi refresh ediyor (OnParameterSet)
        // https://learn.microsoft.com/en-us/aspnet/core/blazor/components/lifecycle?view=aspnetcore-6.0#after-parameters-are-set-onparameterssetasync

        //pubs.Subscribe(Constants.UsrChangeEvnt, OnUsrChange);

        // Igili Etkinlik degisimlerini dinlemek gerek cunki USP yi etkilemiyor

        //ChatL = EtkHub.GetUsrEtks(USP.UsrId);
        char usrEtkStu = EtkHub.EtkD[ETid].MbrD[USP.UsrId];
        if (Cnst.CanChat(usrEtkStu))
        {
            ChatL = ChatHub.GetEtkChats(ETid);
            pubs.Subscribe($"EC:{ETid}", ChatChangeHandler);

            pubs.Publish(Cnst.EtkChangeEvnt, new { ETid = ETid });
        }
        else
            NavigationManager.NavigateTo("/etkhub");

    }

    public void ChatChangeHandler(dynamic d)
    {
        InvokeAsync(StateHasChanged);
        //int etId = d.ETid;
        //if(ETid == etId)
        //{
        //    //ChatL = EtkHub.GetUsrEtks(USP.UsrId);
        //    InvokeAsync(StateHasChanged);
        //}
    }

    public void Dispose()
    {
        pubs.UnSubscribe($"EC:{ETid}", ChatChangeHandler);
    }

}


@*<button class="btn btn-link" onclick="document.getElementById('star_wars').scrollIntoView({behavior:'smooth'})">Star Wars</button>

... lots of other text

<p id="star_wars">Star Wars is an American epic...</p>
*@

<style>
    .ug {
        display: grid;
        grid-gap: 4px;
        grid-template-columns: 100px 50px 200px;
        background-color: burlywood;
        /*color: #444;*/
        justify-content: center;
        align-content: center;
        /*height: 100px;*/
        /*overflow: auto;*/
    }
    .txta {
        width:100%;
        resize:vertical;
        background-color: inherit;
    }
    .txt {
        border: 1px solid burlywood;
        width: 100%;
        margin-bottom: 4px;
        padding: 0 4px;
    }

    .txtBaslik {
        position: absolute;
        right: 4px;
        top: -2px;
        font-size: x-small;
        background-color: burlywood;
        padding: 0 2px;
    }

    .info {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background-color: #edeeee;
        word-wrap: anywhere;
    }

    .usr {
        color: orangered;
        font-weight: bold;
        font-size: x-small;
        cursor: pointer;
    }

        /*.usr:hover {
            font-size: large;
        }*/

    [data-kim="Ben"] {
        background-color: beige;
        /*margin-left: 50px;*/
    }

    .tarih {
        font-weight: 900;
        margin: 4px;
    }

    .saat {
        align-self: flex-end;
        font-size: x-small;
        font-weight: 200;
    }

    .G {
        background-color: aliceblue;
    }

    .O {
        background-color: bisque;
    }

    table, th, td {
        border: 1px solid none;
        /*border-collapse: collapse;*/
        padding: 0 4px;
    }
</style>

