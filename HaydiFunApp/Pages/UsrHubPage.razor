@page "/usrhub"

@inject NavigationManager NavigationManager
@inject IPubs pubs
@inject UsrHub UsrHub
@inject IDialogService DialogService
@inject ISnackbar Snackbar

@implements IDisposable

<style>
    .ug {
        display: grid;
        grid-gap: 4px;
        grid-template-columns: 100px 50px 200px;
        background-color: burlywood;
        /*color: #444;*/
        justify-content: center;
        align-content: center;
        /*height: 100px;*/
        /*overflow: auto;*/
    }

    .tal {
        text-align: left;
    }

    .emj {
        font-size: large;
        text-align: center;
        font-weight: bold;
    }

    .imj {
        display: block;
        cursor: pointer;
    }

    .tac {
        text-align: center;
    }

    .tar {
        text-align: right;
    }

    .inp {
        border: 1px solid burlywood;
        width: 100%;
        margin-bottom: 4px;
        padding: 0 4px;
    }

    table, th, td {
        border: 1px solid burlywood;
        border-collapse: collapse;
        padding: 0 4px;
    }
</style>

@*<label>
    <label for="isOnline">Online olanlar</label>
    <input type="checkbox" @bind="isOnline" name="isOnline" />
    <input type="text" @bind="SrchValueHepsiName" class="inp" placeholder="Hepsi.." />
    <input type="text" @bind="SrchValueBiriName" class="inp" placeholder="Biri" />
</label>
<button @onclick="SrchClick">Search</button>

width: min-content;
*@
@if (USP.UsrId != 0)
{
    <div style="margin:auto; max-height: 90vh; max-width: fit-content; overflow: auto;">
        <label for="isOnline">Online olanlar</label>
        <input type="checkbox" @bind="isOnline" name="isOnline" />
        <input type="text" @bind="SrchValueHepsiName" class="inp" placeholder="Hepsi.." @onclick="SrchClick" readonly />
        <input type="text" @bind="SrchValueBiriName" class="inp" placeholder="Biri" @onclick="SrchClick" readonly />
        <table>
            <caption style="background-color: burlywood;">Üyeler</caption>
            <colgroup>
                <col>
                <col>
                <col style="width:50px">
                <col>
                <col>
            </colgroup>
            <thead>
                <tr>
                    <th class="tal">Usr</th>
                    <th>Cnt</th>
                    <th>Avatar</th>
                    <th>Takipcim</th>
                    <th>İzliyorum</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int NOU = 0;
                    int NOC = 0;
                    string Online;
                }
                @foreach (var itm in UsrL)
                //@foreach (var kv in UsrHub.UsrD)
                {
                    //var kv = UsrHub.UsrD[itm.Key];
                    var meId = USP.UsrId;
                    var me = UsrHub.UsrD[meId];
                    //var usrId = kv.Key;
                    var usrId = itm;
                    // var usr = kv.Value;
                    var usr = UsrHub.UsrD[itm];

                    string Takipcim = "";
                    string Izliyorum = "";
                    if (usrId == meId)
                    {
                        Takipcim = "★";
                        Izliyorum = "★";
                    }
                    if (usr.FanD.TryGetValue(meId, out char tv))
                        Takipcim = Cnst.emjFanTyp(tv);
                    if (me.FanD.TryGetValue(usrId, out char fv))
                        Izliyorum = Cnst.emjFanTyp(fv);
                    Online = Cnst.emjOnlineStu(usr.isOnline);
                    <tr>
                        <td @onclick="(()=> OzelDavet(usr.UTid))" style="cursor:pointer"><b>@usr.Usr</b> @Online</td>
                        <td class="tac">@usr.Cnt.ToString("#")</td>
                        <td class="px-0" @onclick="(()=> UsrInfo(usr.UTid))"><img src="@usr.ImgUrl" class="imj" /></td>
                        <td class="emj">@Takipcim</td>
                        <td class="emj" @onclick="(()=> ToggleFanTyp(usr.UTid))" style="cursor:pointer">@Izliyorum</td>
                    </tr>
                    <tr style="background-color: beige">
                        <td colspan="9">@usr.LblAds</td>
                    </tr>
                    <br />
                    NOU++;
                    NOC += usr.Cnt;
                }
            </tbody>
            <tfoot style="background-color: burlywood;">
                <tr>
                    <td class="tac">@NOU</td>
                    <td class="tac">@NOC</td>
                    <td colspan="9"></td>
                </tr>
            </tfoot>
        </table>
    </div>

    @if (UTid > 0)
    {
        <UsrInfo UTid="@UTid" isOpen="@isOpen"></UsrInfo>
    }
}


@code {
    [CascadingParameter] private UserStateProvider? USP { get; set; }
    string SrchValueHepsi = "";
    string SrchValueBiri = "";
    string SrchValueHepsiName = "";
    string SrchValueBiriName = "";
    bool isOnline = true;
    int UTid;
    bool isOpen;

    List<int> UsrL = new List<int>();

    public async Task OzelDavet(int utId)
    {
        // Beni engellediyse davet gonderemem
        if (UsrHub.UsrD[utId].FanD.TryGetValue(USP.UsrId, out char tv))
        {
            if (tv == 'E')
            {
                Snackbar.Add("Seni Engellemiş<br/>Davet gönderemezsin", Severity.Error);
                return;
            }
        }

        if (USP.UsrId == utId)
        {
            Snackbar.Add("Kendine Davet gönderemezsin", Severity.Error);
            return;
        }

        var prms = new DialogParameters { ["UTid"] = utId };

        var dialog = DialogService.Show<OzlDvtDialog>("baslik", prms);
        var result = await dialog.Result;
    }

    public void UsrInfo(int utId)
    {
        UTid = utId;
        isOpen = true;
    }

    private void ToggleFanTyp(int utId)
    {
        if (USP.UsrId != utId)
            UsrHub.ToggleFanTyp(USP.UsrId, utId);
    }

    public async Task SrchClick()
    {
        //var prms = new DialogParameters();
        //prms.Add("andTxt", SrchValueHepsi);
        //prms.Add("orTxt", SrchValueBiri);

        var prms = new DialogParameters { ["andTxt"] = SrchValueHepsi, ["orTxt"] = SrchValueBiri };

        var dialog = DialogService.Show<LblSrchDialog>("baslik", prms);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            if (result.Data is LblSrchMdl srchTxt)
            {
                SrchValueHepsi = srchTxt.andTxt;
                SrchValueHepsiName = srchTxt.andTxtName;
                SrchValueBiri = srchTxt.orTxt;
                SrchValueBiriName = srchTxt.orTxtName;
                Srch();
            }
        }
    }

    public void Srch()
    {

        HashSet<int> hepsiHS = new();
        HashSet<int> biriHS = new();
        Cnst.StringToHashSet(SrchValueHepsi, hepsiHS);
        Cnst.StringToHashSet(SrchValueBiri, biriHS);

        UsrL.Clear();
        foreach (var itm in UsrHub.UsrD.Values)
        {
            if (!isOnline || itm.isOnline)
            {
                if (biriHS.Count == 0 || biriHS.Overlaps(itm.LblH))
                    if (hepsiHS.Count == 0 || hepsiHS.IsProperSubsetOf(itm.LblH))
                        UsrL.Add(itm.UTid);
            }
        }
        //Overlaps: true if the HashSet<T> object and other share at least one common element; otherwise, false.
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        //if (parameters.TryGetValue<UserStateProvider>(nameof(USP), out var value))
        //{
        //  if (value is null || value.UsrTyp != "A")
        //    NavigationManager.NavigateTo("");
        //  else
        //    await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
        //}
        await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
    }
    protected override void OnParametersSet()
    {
        // Usr degistiginde USP burayi refresh
        Srch();
    }

    protected override void OnInitialized()
    {
        // Subscribe olmaya gerek yok.
        // UsrHub.UsrD degistiginde USP(parent) degistigi icin burayi refresh ediyor (OnParameterSet)
        // https://learn.microsoft.com/en-us/aspnet/core/blazor/components/lifecycle?view=aspnetcore-6.0#after-parameters-are-set-onparameterssetasync

        //pubs.Subscribe(Cnst.UsrChangeEvnt, OnUsrChange);
    }

    public void OnUsrChange(dynamic d)
    {
        //InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        //pubs.UnSubscribe(Constants.UsrChangeEvnt, OnUsrChange);
    }

}
